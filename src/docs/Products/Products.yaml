paths:
  /api/products:
    get:
      summary: Obtiene todos los productos.
      tags:
        - Products
      responses:
        "200":
          description: Los productos fueron devueltos satisfactoriamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "500":
          description: Error del servidor. Usualmente generando la query o falla la conexion a la DB.
    post:
      summary: Crea un nuevo producto
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/reqProduct"
      responses:
        "200":
          description: Producto creado exitosamente
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Success"
        "409":
          description: No se pudo crear el producto
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Error"
  /api/products/{pid}:
    get:
      summary: Obtiene el producto correspondiente al id proporcionado
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto que se busca
          schema:
            $type: String
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "409":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Error"
    put:
      summary: Actualizar un producto a partir del ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto a modificar
          schema:
            $type: String
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/reqProduct"
      responses:
        "200":
          description: Producto modificado exitosamente
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Success"
        "409":
          description: Producto no encontrado o datos proporcionados incorrectos
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Error"
    delete:
      summary: Eliminar un producto a partir del ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: ID del producto a eliminar
          schema:
            $type: String
      responses:
        "200":
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Success"
        "409":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Error"
components:
  schemas:
    Success:
      type: object
      properties:
        status:
          type: String
          description: success
        message:
          type: String
          description: Tipo de proceso realizado.
      example:
        status: success
        message: Process successfully completed.
    Error:
      type: object
      properties:
        status:
          type: String
          description: error
        message:
          type: String
          description: Error que no permitió completar el proceso.
      example:
        status: error
        message: The process could not be completed.
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID auto generado by mongo
        title:
          type: String
          description: Nombre del producto
        description:
          type: String
          description: Descripción del producto
        code:
          type: String
          description: Código único del producto
        price:
          type: Number
          description: Precio del producto
        status:
          type: Boolean
          description: Estado de disponibilidad del producto
        stock:
          type: Number
          description: Stock del producto
        category:
          type: String
          description: Categoría del producto
        thumbnail:
          type: String
          description: Url de la imagen del producto
      example:
        _id: ObjectId("644081a93f0625dc193bc594")
        title: Producto prueba
        description: Este es un producto prueba
        code: abc123
        price: 200
        status: true
        stock: 25
        category: Categoría de prueba
        thumbnail: Sin imagen
  requestBodies:
    reqProduct:
      type: object
      properties:
        title:
          type: String
          description: Nombre del producto
        description:
          type: String
          description: Descripción del producto
        code:
          type: String
          description: Código único del producto
        price:
          type: Number
          description: Precio del producto
        status:
          type: Boolean
          description: Estado de disponibilidad del producto
        stock:
          type: Number
          description: Stock del producto
        category:
          type: String
          description: Categoría del producto
        thumbnail:
          type: String
          description: Url de la imagen del producto
      example:
        title: Producto prueba2
        description: Este es un producto prueba2
        code: abc199
        price: 200
        stock: 25
        category: Categoría de prueba2